var debug = require('debug')('dialogflow-to-facebook-middleware');

module.exports = function (config) {

  var middleware = {};

  middleware.receive  = function(bot, message, next) {

    if (message.nlpResponse === undefined) {
      debug('bot-kit-middleware-dialogflow was not previously executed');
      next();
    }

    var messages = message.nlpResponse.result.fulfillment.messages;

    var fbResponse = {};

    var fbMessages = messages.filter(isForFacebook);

    if (fbMessages.length === 0) {
      fbResponse.text = message.nlpResponse.result.fulfillment.speech;
    }

    fbMessages.forEach(function (item, index) {
      var converted;

      switch (item.type) {
        case 0:
          fbResponse.text = toText(item);
          break;

        case 1:

          break;

        case 2:
          //fbResponse.attachment.payload.elements.push(toQuickReplies(item));
          fbResponse.quick_replies  = toQuickReplies(item);
          break;

        case 3:
        fbResponse.attachment = toImage(item);

        default:
          break;
      }

    });

    debug('Facebook response:', fbResponse);
    message.fbResponse = fbResponse;

    next();
  };

  return middleware;

};

function toText(dialogflowMessage) {
  return dialogflowMessage.speech;
};

function toImage(dialogflowMessage) {
    var converted = {
        'type': 'image',
        'payload': {
            'url': dialogflowMessage.imageUrl
        }
    };
}

function toQuickReplies(dialogflowMessage) {

  var quickReplies = [];

  dialogflowMessage.replies.forEach(function(item, index) {
    quickReplies.push({
      "content_type": "text",
      "title": item,
      "payload": item
    });
  });
  return quickReplies;
};

function isForFacebook(item) {
  if (item.platform === 'facebook') {
    return true;
  } else {
    return false;
  }
};
